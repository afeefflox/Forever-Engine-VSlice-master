digraph graphname {
n3110594 [shape=box,label="(3110594)"];
n3110593 [shape=box,label="(3110593)"];
n3110592 [shape=box,label="(3110592)\n_hx_tmp = true"];
n3110591 [shape=box,label="(3110591)\n_hx_tmp = note.hasBeenHit"];
n3110590 [shape=box,label="(3110590)"];
n3110589 [shape=box,label="(3110589)\nvar _hx_tmp\nvar _hx_tmp = ! note.hasMissed"];
n3110589 -> n3110591[style="dashed",color="gray",label="then"];
n3110589 -> n3110592[style="dashed",color="gray",label="else"];
n3110589 -> n3110593[style="dashed",color="gray",label="next"];
n3110588 [shape=box,label="<function-end>
(3110588)"];
n3110587 [shape=box,label="<function-begin>
(3110587)\nvar hitWindowStart = note.get_strumTime()\nvar hitWindowStart = hitWindowStart + meta.data.Conductor.safeZoneOffset\nvar hitWindowStart = hitWindowStart - meta.util.Constants.HIT_WINDOW_MS\nvar hitWindowCenter = note.get_strumTime()\nvar hitWindowCenter = hitWindowCenter + meta.data.Conductor.safeZoneOffset\nvar hitWindowEnd = note.get_strumTime()\nvar hitWindowEnd = hitWindowEnd + meta.data.Conductor.safeZoneOffset\nvar hitWindowEnd = hitWindowEnd + meta.util.Constants.HIT_WINDOW_MS\nvar _hx_tmp = meta.data.Conductor.songPosition > hitWindowEnd"];
n3110586 [shape=box,label="(3110586)\nvar _this = this.cpuStrums.notes\nvar Recurse = false"];
n3110585 [shape=box,label="<function-end>
(3110585)"];
n3110584 [shape=box,label="<function-begin>
(3110584)\nvar `this = this"];
n1 [shape=box,label="<root>
(1)"];
}
