import meta.modding.base.ScriptedFlxSpriteGroup;
import flixel.sound.FlxSound;
import funkin.vis.dsp.SpectralAnalyzer;
import graphics.FunkinSprite;
import flixel.math.FlxMath;
import Lambda;
class ABotVis extends ScriptedFlxSpriteGroup
{
    public function new(x:Float, y:Float)
    {
        super(x, y);

        var positionX:Array<Float> = [0, 59, 56, 66, 54, 52, 51];
        var positionY:Array<Float> = [0, -8, -3.5, -0.4, 0.5, 4.7, 7];

        for (i in 1...8)
        {
            var sum = function(num:Float, total:Float) return total += num;
            var posX:Float = Lambda.fold(positionX.slice(0, i), sum, 0);
            var posY:Float = Lambda.fold(positionY.slice(0, i), sum, 0);

            var viz:FunkinSprite = new FunkinSprite(posX, posY).loadFrame('characters/abot/viz');
            viz.animation.addByPrefix('VIZ', 'viz' + i, 0);
            viz.animation.play('VIZ', false, false, 6);
            add(viz);
        }
    }

    var analyzer:SpectralAnalyzer;
    public function initAnalyzer(snd:FlxSound)
    {
        analyzer = new SpectralAnalyzer(snd._channel.__audioSource, 7, 0.1, 40);
        analyzer.fftN = 256;
    }

    override function update(elapsed:Float)
    {
        super.update(elapsed);
		if(analyzer == null) return;

        levels = analyzer.getLevels(levels);
	
        for (i in 0...Std.int(Math.min(members.length, levels.length)))
        {
            var animFrame:Int = Math.round(levels[i].value * 5);
			animFrame = Std.int(Math.abs(FlxMath.bound(animFrame, 0, 5) - 5)); // shitty dumbass flip, cuz dave got da shit backwards lol!
			members[i].animation.curAnim.curFrame = animFrame;
        }
    }
}